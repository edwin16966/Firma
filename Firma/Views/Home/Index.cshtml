@{
    ViewBag.Title = "Firma";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <label class="subtitulo">Firmar 1</label>
        <canvas id="canvas1" class="table-bordered">Su navegador no soporta canvas </canvas>
        <button type="button" id="limpiar1" class="btn btn-default">Limpiar</button>
        <button type="button" id="btnGuardar1" class="btn btn-primary">Guardar</button>
    </div>
    <div class="col-md-12">
        <label class="subtitulo">Firmar 2</label>
        <canvas id="canvas2" class="table-bordered">Su navegador no soporta canvas </canvas>
        <button type="button" id="limpiar2" class="btn btn-default">Limpiar</button>
        <button type="button" id="btnGuardar2" class="btn btn-primary">Guardar</button>
    </div>
    <div class="col-md-12">
        <label class="subtitulo">Firmar 3</label>
        <canvas id="canvas3" class="table-bordered">Su navegador no soporta canvas </canvas>

        <button type="button" id="limpiar3" class="btn btn-default">Limpiar</button>
        <button type="button" id="btnGuardar3" class="btn btn-primary">Guardar</button>
    </div>

</div>

@section scripts{
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script>
        var limpiar1 = document.getElementById("limpiar1");
        var limpiar2 = document.getElementById("limpiar2");
        var limpiar3 = document.getElementById("limpiar3");
        var canvas1 = document.getElementById("canvas1");
        var canvas2 = document.getElementById("canvas2");
        var canvas3 = document.getElementById("canvas3");
        if ($("#canvas1").click()) {

            dibujar(canvas1,limpiar1);
        }
        if ($("#canvas2").click()) {
            dibujar(canvas2, limpiar2);
        }
        if ($("#canvas3").click()) {
            dibujar(canvas3, limpiar3);
        }
        function dibujar(canvas,limpiar) {
            var ctx = canvas.getContext("2d");
            
            var cw = canvas.width = 400,
                cx = cw / 2;
            var ch = canvas.height = 140,
                cy = ch / 2;
            ctx.fillStyle = 'white';
            
            var dibujar = false;
            var factorDeAlisamiento = 5;
            var Trazados = [];
            var puntos = [];
            ctx.lineJoin = "round";

            limpiar.addEventListener('click', function (evt) {
                dibujar = false;
                ctx.clearRect(0, 0, cw, ch);
                ctx.fillRect(0, 0, cw, ch);
                Trazados.length = 0;
                puntos.length = 0;
            }, false);

            canvas.addEventListener('click', function (evt) {
                dibujar = false;
                
            }, false);


            canvas.addEventListener('mousedown', function (evt) {
                dibujar = true;
                //ctx.clearRect(0, 0, cw, ch);
                puntos.length = 0;
                ctx.beginPath();

            }, false);

            canvas.addEventListener('mouseup', function (evt) {
                redibujarTrazados();
            }, false);

            canvas.addEventListener("mouseout", function (evt) {
                redibujarTrazados();
            }, false);

            canvas.addEventListener("mousemove", function (evt) {
                if (dibujar) {
                    var m = oMousePos(canvas, evt);
                    puntos.push(m);
                    ctx.lineTo(m.x, m.y);
                    ctx.stroke();
                }
            }, false);
            function reducirArray(n, elArray) {
                var nuevoArray = [];
                nuevoArray[0] = elArray[0];
                for (var i = 0; i < elArray.length; i++) {
                    if (i % n == 0) {
                        nuevoArray[nuevoArray.length] = elArray[i];
                    }
                }
                nuevoArray[nuevoArray.length - 1] = elArray[elArray.length - 1];
                Trazados.push(nuevoArray);
            }

            function calcularPuntoDeControl(ry, a, b) {
                var pc = {}
                pc.x = (ry[a].x + ry[b].x) / 2;
                pc.y = (ry[a].y + ry[b].y) / 2;
                return pc;
            }

            function alisarTrazado(ry) {
                if (ry.length > 1) {
                    var ultimoPunto = ry.length - 1;
                    ctx.beginPath();
                    ctx.moveTo(ry[0].x, ry[0].y);
                    for (i = 1; i < ry.length - 2; i++) {
                        var pc = calcularPuntoDeControl(ry, i, i + 1);
                        ctx.quadraticCurveTo(ry[i].x, ry[i].y, pc.x, pc.y);
                    }
                    ctx.quadraticCurveTo(ry[ultimoPunto - 1].x, ry[ultimoPunto - 1].y, ry[ultimoPunto].x, ry[ultimoPunto].y);
                    ctx.stroke();
                }
            }


            function redibujarTrazados() {
                dibujar = false;
                ctx.clearRect(0, 0, cw, ch);
                ctx.fillRect(0, 0, cw, ch);
                reducirArray(factorDeAlisamiento, puntos);
                for (var i = 0; i < Trazados.length; i++)
                    alisarTrazado(Trazados[i]);
            }

            function oMousePos(canvas, evt) {
                var ClientRect = canvas.getBoundingClientRect();
                return { //objeto
                    x: Math.round(evt.clientX - ClientRect.left),
                    y: Math.round(evt.clientY - ClientRect.top)
                }
            }
        }
        
        





        


    </script>
}